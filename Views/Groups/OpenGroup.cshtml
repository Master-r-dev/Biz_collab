@model Biz_collab.Models.Group

@{
    ViewData["Title"] = "Группа " + Model.Name;
}

<div class="wrap-login100 search bg-b b-r-10 p-l-50 p-r-50 p-t-10 p-b-10">
    <form asp-action="OpenGroup" method="get">
        <div class="form-actions no-color search-box" style="width: auto">
            <input class="search-text c-g" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Поиск..." />
            <button class="search-text-btn">
                <i class="fas fa-search"></i>
            </button>
        </div>
    </form>
</div>
<div style="display: flex;">
    <div class="graphics-box">
        <div class="chart bg-b b-r-10 p-l-20 p-r-20 p-b-20" align="center">
            <h2 class="c-g f-s-1rem my-balance p-t-7">Бюджет</h2>
            <div id="budget_chart"></div>
        </div>
        <div class="chart bg-b b-r-10 p-l-20 p-r-20 p-t-5 p-b-20" align="center">
            <h2 class="c-g f-s-1rem my-balance p-t-7">Производительность</h2>
            <div class="gr">
                <div id="client_chart"></div>
            </div>
        </div>
        <div class="chart bg-b b-r-10 p-l-20 p-r-20 p-b-20" align="center">
            <div class="gr">
                <div id="res_chart"></div>
            </div>
        </div>
    </div>

    <div class="transactions-box bg-b b-r-10 p-l-20 p-r-20p-b-20">
        <h2 class="c-g f-s-1rem">
            Транзакции
            <a class="add-tranzaction-btn modal-link" href="@Url.Action("Create", "Transactions", new { @Model.Name })" title="Создать новую транзакцию"><i class="fas fa-plus-circle"></i></a>
        </h2>
        <table class="default-table">
            <thead>
                <tr>
                    <td>
                        Описание
                    </td>
                    <td>
                        <a asp-action="OpenGroup" asp-route-name="@Model.Name" asp-route-sortOrder="@ViewData["AmountSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Сумма</a>
                    </td>
                    <td>
                        <a asp-action="OpenGroup" asp-route-name="@Model.Name" asp-route-sortOrder="@ViewData["OperationTypeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Тип</a>
                    </td>
                    @if (Model.Type == 2)
                    {
                        <td>
                            Участник
                        </td>
                    }
                        <td>
                            Статус/Дата создания
                        </td>                    
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in ((PaginatedList<Transaction>)ViewBag.Transactions))
                {
                <tr class="transaction-tr">
                    <td>
                        @transaction.Explanation
                    </td>
                    <td>
                        @if (transaction.OperationType == 3)
                        {
                            <i>+@transaction.Amount</i>
                        }
                        else
                        {
                            <i>-@transaction.Amount</i>
                        }
                    </td>
                    @if (Model.Type == 2)
                    {
                        <td>
                            @transaction.Client.Login
                        </td>
                    }
                    @if (transaction.Status)
                    {                        
                        <td>
                            <i class="fas fa-check-circle"></i>
                            @transaction.StartTime
                        </td>
                    }
                    else
                    {
                        <td>
                            <i class="fas fa-clock"></i>
                        </td>
                        @if (transaction.Votes.FirstOrDefault(v => v.Client.Login == User.Identity.Name) == null)
                        {
                            <td>
                                <a asp-controller="Transactions" asp-action="VoteYes" asp-route-id="@transaction.Id"><i class="fas fa-thumbs-up"></i></a>
                            </td>
                            <td>
                                <a asp-controller="Transactions" asp-action="VoteNo" asp-route-id="@transaction.Id"><i class="fas fa-thumbs-down"></i></a>
                            </td>
                        }
                        else
                        {
                            <td>
                                <b> @Math.Round((decimal)transaction.YesPercent, 2)</b>
                            </td>

                                <td>
                                    <b> @Math.Round((decimal)transaction.NoPercent, 2)</b>
                                </td>
                            }
                        }
                        <td>
                            <a class="modal-link" href="@Url.Action("Details", "Transactions", new { transaction.Id })">
                                <i class="fas fa-info-circle"></i>
                            </a>
                        </td>
                        @if ((User.Identity.Name == transaction.Client.Login || Model.Clients.FirstOrDefault(c => c.Client.Login == User.Identity.Name).R == "Создатель") && transaction.Status == false)
                        {
                            <td>
                                <a class="modal-link" href="@Url.Action("Delete", "Transactions", new { transaction.Id })">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>


        <div class="m-r-20" align="right">
            @{
                var prevDisabled = !ViewBag.Transactions.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !ViewBag.Transactions.HasNextPage ? "disabled" : "";
            }

            <a asp-action="OpenGroup"
               asp-route-name="@Model.Name"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(ViewBag.Transactions.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @prevDisabled"
               style="color:#adadad">
                <<
            </a>
            <a asp-action="OpenGroup"
               asp-route-name="@Model.Name"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(ViewBag.Transactions.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled"
               style="color: #adadad">
                >>
            </a>
        </div>
    </div>
    <div class="participants-box bg-b b-r-10 p-l-20 p-r-20 p-b-20">
            <h2 class="c-g f-s-1rem p-t-7">Участники</h2>
            <table class="default-table scroll">
                @foreach (var client in Model.Clients)
                {
                    var currentuser = User.Identity.Name == client.Client.Login ? "currentuser" : "";
                    var currentuserrole = Model.Clients.FirstOrDefault(c => c.Client.Login == User.Identity.Name).R;
                    <tr>
                        <td class="@currentuser">
                            @client.Client.Login
                        </td>
                        <td class="@currentuser">
                            @client.R
                        </td>
                        <td class="@currentuser">
                            @client.P
                        </td>
                        
                        @if (currentuserrole == "Создатель" || currentuserrole == "Mod")
                        {
                            @if (client.R != "Создатель" && client.Client.Login != User.Identity.Name)
                            {
                                @if (client.R != "Забанен") 
                                { 
                                    <td>
                                        <a asp-controller="Groups" asp-action="BanClient" asp-route-Login="@client.Client.Login" asp-route-name="@Model.Name">
                                            <i class="fas fa-ban @currentuser"></i>
                                        </a>
                                    </td>
                                }
                                <td>
                                    <a class="modal-link" href="@Url.Action("EditRoleClient", "Groups", new { Login = client.Client.Login, name = Model.Name })" title="Изменить роль участника">
                                        <i class="fas fa-edit @currentuser"></i>
                                    </a>
                                </td>
                            }   
                        }
                    </tr>
                }
            </table>
    </div>
</div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawCharts);

    var base_options = {
        backgroundColor: '#202020',
        hAxis: {
            textStyle: { color: '#adadad' }
        },
        vAxis: {
            textStyle: { color: '#adadad' }
        },
        legend: { position: 'none' },
    };

    function get_budget_data() {

        var amounts = @ViewBag.trans_amounts;
        var dates = @ViewBag.trans_dates;
        var curbudget = @Model.Budget;
        var today = (new Date()).toLocaleDateString();

        var data = [
            ["Дата", "Бюджет"],
        ];

        for (let i = 0; i < amounts.length; i++) {

            let date = dates[i];
            date = new Date(date[0], date[1] - 1, date[2]).toLocaleDateString();

            if (data[data.length - 1][0] != date) {
                data.push([date, amounts[i]]);
            } else {
                data[data.length - 1][1] += amounts[i];
            }
        }
        for (let i = data.length - 1; i > 0; i--) {
            curbudget -= data[i][1];
            data[i][1] = curbudget;
        }
        if (data[data.length - 1][0] != today)
            data.push([(new Date()).toLocaleDateString(), @Model.Budget]);
        else
            data[data.length - 1][1] = @Model.Budget;

        return data;
    }

    function get_client_data() {
        var clients = @Html.Raw(ViewBag.clients);
        var clients_trans = @ViewBag.clients_trans;
        var data = [
            ["Пользователь", "Количество транзакций", { role: 'style' }],
        ];

        for (let i = 0; i < clients.length; i++) {
            if (i % 2) {
                data.push([clients[i], clients_trans[i], '#ec86ec']);
            } else {
                data.push([clients[i], clients_trans[i], '#8937df']);
            }
        }
        return data;
    }

    function drawBudgetChart() {
        data = google.visualization.arrayToDataTable(get_budget_data());

        let options = base_options;
        options['curveType'] = 'function';
        options['series'] = {
            0: {
                color: '#8937df',
            }
        };

        var chart = new google.visualization.AreaChart(document.getElementById('budget_chart'));

        chart.draw(data, options);
    }

    function drawClientChart() {
        var data = google.visualization.arrayToDataTable(get_client_data());

        let options = base_options;
        options['bar'] = {
            groupWidth: '10%',
        };

        var chart = new google.visualization.ColumnChart(document.getElementById("client_chart"));
        chart.draw(data, options);
    }

    function drawResChart() {
        var data = google.visualization.arrayToDataTable([
            ["Описание", "Сумма"],
            ["Потрачено", @ViewBag.total_spent],
            ["Получено", @ViewBag.total_recieved]
            ]);

        let options = base_options;
        options['slices'] = {
            0: {
                color: '#8937df'
            },
            1: {
                color: '#ec86ec'
            },
        };
        options['legend'] = {
            textStyle: {
                color: '#969696',
            },
        };

        var chart = new google.visualization.PieChart(document.getElementById("res_chart"));
        chart.draw(data, options);
    }

    function drawCharts() {
        drawBudgetChart();
        drawClientChart();
        drawResChart();
    }
</script>
