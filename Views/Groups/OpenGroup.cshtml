@model Biz_collab.Models.Group
@{
    ViewData["Title"] = "Группа " + Model.Name;
}

<h1>Container</h1>
<dl class="row">
    <dt class="col-sm-2">
        Бюджет:
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Budget)
    </dd>
    <dt class="col-sm-2">
        Количество клиентов:
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Clients.Count)
    </dd>
    @if (Model.Clients.FirstOrDefault(rp => rp.GroupId == Model.Id && rp.Client.Login == User.Identity.Name && (rp.R == "Создатель" || rp.R == "Модератор")) != null)
    {
        @foreach (var c in Model.Clients)
        {
            if (c.Client.Login == User.Identity.Name)
            {
                <dd class="col-sm-10">
                    <b style="background-color:tomato;">   @c.Client.Login | @c.R | @c.P </b> @*Желательно поместить где-то сбоку для пользователя*@
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    @c.Client.Login | @c.R | @c.P
                </dd>
            }
            @if (Model.Clients.FirstOrDefault(rp => rp.GroupId == Model.Id && rp.Client.Login == User.Identity.Name && rp.R == "Создатель") == null)
            {
                <dd>
                    <a asp-controller="Groups" asp-action="EditRoleClient" asp-route-Login="@c.Client.Login" asp-route-id="@Model.Id">Кнопка изменить роль</a> |
                    <a asp-controller="Groups" asp-action="BanClient" asp-route-Login="@c.Client.Login" asp-route-id="@Model.Id">Кнопка забанить</a>
                    @*имеет смысл где внос за роли(хочешь назад-плати) <a asp-controller="Groups" asp-action="DeleteClient" asp-route-Login="@c.Client.Login" asp-route-id="@Model.Id">Кнопка удалить</a> *@
                </dd>
            }
        }
    }
    else
    {
        @foreach (var c in Model.Clients)
        {
            if (c.Client.Login == User.Identity.Name)
            {
                <dd class="col-sm-10">
                    <b style="background-color:tomato;">   @c.Client.Login | @c.R | @c.P </b>
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    @c.Client.Login | @c.R | @c.P
                </dd>
            }
        }
    }
</dl>
<dl class="row">
    <dt class="col-sm-2">
        Транзакции
    </dt>
    <dd class="col-sm-10">
        Количество: @Html.DisplayFor(model => model.Transactions.Count)
        @if (Model.Clients.FirstOrDefault(rp => rp.GroupId == Model.Id && rp.Client.Login == User.Identity.Name && (rp.R == "Забанен")) == null)
        {
            <a asp-controller="Transactions" asp-action="Create" asp-route-name="@Model.Name">+Новая транзакция</a>
        }
    </dd>
</dl>
@if (Model.Type == 2)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Описание
                </th>
                <th>
                    <a asp-action="OpenGroup" asp-route-sortOrder="@ViewData["AmountSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Сумма</a>
                </th>
                <th>
                    <a asp-action="OpenGroup" asp-route-sortOrder="@ViewData["OperationTypeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Тип</a>
                </th>
                <th>
                    <a asp-action="OpenGroup" asp-route-sortOrder="@ViewData["ClientNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Клиент</a>
                </th>
                <th>
                    <a asp-action="OpenGroup" asp-route-sortOrder="@ViewData["TimeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Статус/Время создания</a>
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var t in Model.Transactions)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => t.Explanation)
                    </td>
                    @if (t.OperationType == 3)
                    {
                        <td>
                            <b>+ </b> @Html.DisplayFor(modelItem => t.Amount)
                        </td>
                    }
                    else
                    {
                        <td>
                            <b>- </b> @Html.DisplayFor(modelItem => t.Amount)
                        </td>
                    }

                    @if (t.OperationType == 1)
                    {
                        <td>
                            <b>трата бюджета  на внешние источники </b>@*Заменить на glyphicon !!!*@
                        </td>
                    }
                    else if (t.OperationType == 2)
                    {
                        <td>
                            <b>перевод с счета группы на счет пользователя</b>@*Заменить на glyphicon !!!*@
                        </td>
                    }
                    else if (t.OperationType == 3)
                    {
                        <td>
                            <b>перевод с счета пользователя  на счет группы</b>@*Заменить на glyphicon !!!*@
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => t.Client.Login)
                    </td>
                    @if (t.Status == false)
                    {
                        <td>
                            @Html.DisplayFor(modelItem => t.Status)
                        </td>
                        @if (User.Identity.Name != t.Client.Login || t.Votes.Where(v => v.Client.Login == User.Identity.Name) == null)
                        {
                            <td>
                                <a asp-controller="Transactions" asp-action="VoteYes" asp-route-id="@t.Id">VoteYes</a> |
                                <a asp-controller="Transactions" asp-action="VoteNo" asp-route-id="@t.Id">VoteNo</a>
                            </td>
                        }
                        else
                        {
                            <td>
                                @*display votes that are already in*/*@
                                @Html.DisplayFor(modelItem => t.YesPercent) |
                                @Html.DisplayFor(modelItem => t.NoPercent)
                            </td>
                        }
                        @if (User.Identity.Name == t.Client.Login)
                        {
                            <td>
                                <a asp-controller="Transactions" asp-action="Delete" asp-route-id="@t.Id">Delete</a>
                            </td>
                        }
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => t.StartTime)
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>
                    Описание
                </th>
                <th>
                    <a asp-action="OpenGroup" asp-route-sortOrder="@ViewData["AmountSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Сумма</a>
                </th>
                <th>
                    <a asp-action="OpenGroup" asp-route-sortOrder="@ViewData["OperationTypeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Тип</a>
                </th>
                <th>
                    <a asp-action="OpenGroup" asp-route-sortOrder="@ViewData["TimeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Время создания</a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var t in Model.Transactions)
            {
                <tr>
                    <td style="word-break:break-all;">
                        @Html.DisplayFor(modelItem => t.Explanation)
                    </td>
                    @if (t.OperationType == 3)
                    {
                        <td>
                            <b>+ </b> @Html.DisplayFor(modelItem => t.Amount)
                        </td>
                    }
                    else
                    {
                        <td>
                            <b>- </b> @Html.DisplayFor(modelItem => t.Amount)
                        </td>
                    }

                    @if (t.OperationType == 1)
                    {
                        <td>
                            <b>трата бюджета  на внешние источники </b>@*Заменить на glyphicon !!!*@
                        </td>
                    }
                    else if (t.OperationType == 2)
                    {
                        <td>
                            <b>перевод с счета группы на счет пользователя</b>@*Заменить на glyphicon !!!*@
                        </td>
                    }
                    else if (t.OperationType == 3)
                    {
                        <td>
                            <b>перевод с счета пользователя  на счет группы</b>@*Заменить на glyphicon !!!*@
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => t.StartTime)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@{
    var prevDisabled = !ViewBag.Transaction.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !ViewBag.Transaction.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(ViewBag.Transaction.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(ViewBag.Transaction.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<dl class="row">
    <dt class="col-sm-2">
        Графики
    </dt>
    @* canvas and bla bla draw
        @foreach (var c in ViewBag.Clients)
        {
            <dd class="col-sm-10">
                @c.Client.Login @c.R @c.P
            </dd>

        }*@
</dl>